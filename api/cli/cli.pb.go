// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: cli.proto

package cli

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JobMetadata_Status int32

const (
	JobMetadata_STANDBY JobMetadata_Status = 0
	JobMetadata_RUNNING JobMetadata_Status = 1
	JobMetadata_FINISH  JobMetadata_Status = 2
	JobMetadata_ERROR   JobMetadata_Status = 3
)

// Enum value maps for JobMetadata_Status.
var (
	JobMetadata_Status_name = map[int32]string{
		0: "STANDBY",
		1: "RUNNING",
		2: "FINISH",
		3: "ERROR",
	}
	JobMetadata_Status_value = map[string]int32{
		"STANDBY": 0,
		"RUNNING": 1,
		"FINISH":  2,
		"ERROR":   3,
	}
)

func (x JobMetadata_Status) Enum() *JobMetadata_Status {
	p := new(JobMetadata_Status)
	*p = x
	return p
}

func (x JobMetadata_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobMetadata_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_cli_proto_enumTypes[0].Descriptor()
}

func (JobMetadata_Status) Type() protoreflect.EnumType {
	return &file_cli_proto_enumTypes[0]
}

func (x JobMetadata_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobMetadata_Status.Descriptor instead.
func (JobMetadata_Status) EnumDescriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{2, 0}
}

type TaskMetadata_Status int32

const (
	TaskMetadata_STANDBY TaskMetadata_Status = 0
	TaskMetadata_RUNNING TaskMetadata_Status = 1
	TaskMetadata_FINISH  TaskMetadata_Status = 2
	TaskMetadata_ERROR   TaskMetadata_Status = 3
)

// Enum value maps for TaskMetadata_Status.
var (
	TaskMetadata_Status_name = map[int32]string{
		0: "STANDBY",
		1: "RUNNING",
		2: "FINISH",
		3: "ERROR",
	}
	TaskMetadata_Status_value = map[string]int32{
		"STANDBY": 0,
		"RUNNING": 1,
		"FINISH":  2,
		"ERROR":   3,
	}
)

func (x TaskMetadata_Status) Enum() *TaskMetadata_Status {
	p := new(TaskMetadata_Status)
	*p = x
	return p
}

func (x TaskMetadata_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskMetadata_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_cli_proto_enumTypes[1].Descriptor()
}

func (TaskMetadata_Status) Type() protoreflect.EnumType {
	return &file_cli_proto_enumTypes[1]
}

func (x TaskMetadata_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskMetadata_Status.Descriptor instead.
func (TaskMetadata_Status) EnumDescriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{3, 0}
}

type TaskMetadata_RoleType int32

const (
	TaskMetadata_RESERVE   TaskMetadata_RoleType = 0
	TaskMetadata_HOST      TaskMetadata_RoleType = 1
	TaskMetadata_CONTAINER TaskMetadata_RoleType = 2
)

// Enum value maps for TaskMetadata_RoleType.
var (
	TaskMetadata_RoleType_name = map[int32]string{
		0: "RESERVE",
		1: "HOST",
		2: "CONTAINER",
	}
	TaskMetadata_RoleType_value = map[string]int32{
		"RESERVE":   0,
		"HOST":      1,
		"CONTAINER": 2,
	}
)

func (x TaskMetadata_RoleType) Enum() *TaskMetadata_RoleType {
	p := new(TaskMetadata_RoleType)
	*p = x
	return p
}

func (x TaskMetadata_RoleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskMetadata_RoleType) Descriptor() protoreflect.EnumDescriptor {
	return file_cli_proto_enumTypes[2].Descriptor()
}

func (TaskMetadata_RoleType) Type() protoreflect.EnumType {
	return &file_cli_proto_enumTypes[2]
}

func (x TaskMetadata_RoleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskMetadata_RoleType.Descriptor instead.
func (TaskMetadata_RoleType) EnumDescriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{3, 1}
}

// -------------------------------------------------
// |             Metadata Definition               |
// -------------------------------------------------
type NodeMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	IP        string `protobuf:"bytes,2,opt,name=IP,proto3" json:"IP,omitempty"`
	Port      string `protobuf:"bytes,3,opt,name=Port,proto3" json:"Port,omitempty"`
	KernelVer string `protobuf:"bytes,4,opt,name=KernelVer,proto3" json:"KernelVer,omitempty"`
	// Distribution version
	DistVer   string `protobuf:"bytes,5,opt,name=DistVer,proto3" json:"DistVer,omitempty"`
	Arch      string `protobuf:"bytes,6,opt,name=Arch,proto3" json:"Arch,omitempty"`
	FreeMem   string `protobuf:"bytes,7,opt,name=FreeMem,proto3" json:"FreeMem,omitempty"`
	DiskUsage string `protobuf:"bytes,8,opt,name=DiskUsage,proto3" json:"DiskUsage,omitempty"`
}

func (x *NodeMetadata) Reset() {
	*x = NodeMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeMetadata) ProtoMessage() {}

func (x *NodeMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeMetadata.ProtoReflect.Descriptor instead.
func (*NodeMetadata) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{0}
}

func (x *NodeMetadata) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *NodeMetadata) GetIP() string {
	if x != nil {
		return x.IP
	}
	return ""
}

func (x *NodeMetadata) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *NodeMetadata) GetKernelVer() string {
	if x != nil {
		return x.KernelVer
	}
	return ""
}

func (x *NodeMetadata) GetDistVer() string {
	if x != nil {
		return x.DistVer
	}
	return ""
}

func (x *NodeMetadata) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *NodeMetadata) GetFreeMem() string {
	if x != nil {
		return x.FreeMem
	}
	return ""
}

func (x *NodeMetadata) GetDiskUsage() string {
	if x != nil {
		return x.DiskUsage
	}
	return ""
}

type CaseMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID   string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Tag  string `protobuf:"bytes,3,opt,name=Tag,proto3" json:"Tag,omitempty"`
	Path string `protobuf:"bytes,4,opt,name=Path,proto3" json:"Path,omitempty"`
	// Create time
	CTime string `protobuf:"bytes,5,opt,name=CTime,proto3" json:"CTime,omitempty"`
	// Access time
	ATime string `protobuf:"bytes,6,opt,name=ATime,proto3" json:"ATime,omitempty"`
	// Modify time
	MTime string `protobuf:"bytes,7,opt,name=MTime,proto3" json:"MTime,omitempty"`
	Size  uint64 `protobuf:"varint,8,opt,name=Size,proto3" json:"Size,omitempty"`
}

func (x *CaseMetadata) Reset() {
	*x = CaseMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaseMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaseMetadata) ProtoMessage() {}

func (x *CaseMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaseMetadata.ProtoReflect.Descriptor instead.
func (*CaseMetadata) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{1}
}

func (x *CaseMetadata) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *CaseMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CaseMetadata) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *CaseMetadata) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CaseMetadata) GetCTime() string {
	if x != nil {
		return x.CTime
	}
	return ""
}

func (x *CaseMetadata) GetATime() string {
	if x != nil {
		return x.ATime
	}
	return ""
}

func (x *CaseMetadata) GetMTime() string {
	if x != nil {
		return x.MTime
	}
	return ""
}

func (x *CaseMetadata) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type JobMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string             `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name      string             `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Stat      JobMetadata_Status `protobuf:"varint,3,opt,name=Stat,proto3,enum=cli.JobMetadata_Status" json:"Stat,omitempty"`
	FinishCnt int64              `protobuf:"varint,4,opt,name=FinishCnt,proto3" json:"FinishCnt,omitempty"`
	// Create time
	CTime string `protobuf:"bytes,5,opt,name=CTime,proto3" json:"CTime,omitempty"`
	// Finish time
	FTime    string          `protobuf:"bytes,6,opt,name=FTime,proto3" json:"FTime,omitempty"`
	CaseInfo *CaseMetadata   `protobuf:"bytes,7,opt,name=CaseInfo,proto3" json:"CaseInfo,omitempty"`
	Tasks    []*TaskMetadata `protobuf:"bytes,8,rep,name=Tasks,proto3" json:"Tasks,omitempty"`
}

func (x *JobMetadata) Reset() {
	*x = JobMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobMetadata) ProtoMessage() {}

func (x *JobMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobMetadata.ProtoReflect.Descriptor instead.
func (*JobMetadata) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{2}
}

func (x *JobMetadata) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *JobMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JobMetadata) GetStat() JobMetadata_Status {
	if x != nil {
		return x.Stat
	}
	return JobMetadata_STANDBY
}

func (x *JobMetadata) GetFinishCnt() int64 {
	if x != nil {
		return x.FinishCnt
	}
	return 0
}

func (x *JobMetadata) GetCTime() string {
	if x != nil {
		return x.CTime
	}
	return ""
}

func (x *JobMetadata) GetFTime() string {
	if x != nil {
		return x.FTime
	}
	return ""
}

func (x *JobMetadata) GetCaseInfo() *CaseMetadata {
	if x != nil {
		return x.CaseInfo
	}
	return nil
}

func (x *JobMetadata) GetTasks() []*TaskMetadata {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type TaskMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID   string              `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Stat TaskMetadata_Status `protobuf:"varint,2,opt,name=Stat,proto3,enum=cli.TaskMetadata_Status" json:"Stat,omitempty"`
	// Create time
	CTime string `protobuf:"bytes,3,opt,name=CTime,proto3" json:"CTime,omitempty"`
	// Finish time
	FTime       string                `protobuf:"bytes,4,opt,name=FTime,proto3" json:"FTime,omitempty"`
	Role        TaskMetadata_RoleType `protobuf:"varint,5,opt,name=Role,proto3,enum=cli.TaskMetadata_RoleType" json:"Role,omitempty"`
	JobID       string                `protobuf:"bytes,6,opt,name=JobID,proto3" json:"JobID,omitempty"`
	ResltPath   string                `protobuf:"bytes,7,opt,name=ResltPath,proto3" json:"ResltPath,omitempty"`
	ContainerID string                `protobuf:"bytes,8,opt,name=ContainerID,proto3" json:"ContainerID,omitempty"`
	CaseInfo    *CaseMetadata         `protobuf:"bytes,9,opt,name=CaseInfo,proto3" json:"CaseInfo,omitempty"`
	NodeInfo    *NodeMetadata         `protobuf:"bytes,10,opt,name=NodeInfo,proto3" json:"NodeInfo,omitempty"`
}

func (x *TaskMetadata) Reset() {
	*x = TaskMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskMetadata) ProtoMessage() {}

func (x *TaskMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskMetadata.ProtoReflect.Descriptor instead.
func (*TaskMetadata) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{3}
}

func (x *TaskMetadata) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *TaskMetadata) GetStat() TaskMetadata_Status {
	if x != nil {
		return x.Stat
	}
	return TaskMetadata_STANDBY
}

func (x *TaskMetadata) GetCTime() string {
	if x != nil {
		return x.CTime
	}
	return ""
}

func (x *TaskMetadata) GetFTime() string {
	if x != nil {
		return x.FTime
	}
	return ""
}

func (x *TaskMetadata) GetRole() TaskMetadata_RoleType {
	if x != nil {
		return x.Role
	}
	return TaskMetadata_RESERVE
}

func (x *TaskMetadata) GetJobID() string {
	if x != nil {
		return x.JobID
	}
	return ""
}

func (x *TaskMetadata) GetResltPath() string {
	if x != nil {
		return x.ResltPath
	}
	return ""
}

func (x *TaskMetadata) GetContainerID() string {
	if x != nil {
		return x.ContainerID
	}
	return ""
}

func (x *TaskMetadata) GetCaseInfo() *CaseMetadata {
	if x != nil {
		return x.CaseInfo
	}
	return nil
}

func (x *TaskMetadata) GetNodeInfo() *NodeMetadata {
	if x != nil {
		return x.NodeInfo
	}
	return nil
}

// -------------------------------------------------
// |                API Definition                 |
// -------------------------------------------------
// init: init workspace, legacy interface
type InitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InitRequest) Reset() {
	*x = InitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitRequest) ProtoMessage() {}

func (x *InitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitRequest.ProtoReflect.Descriptor instead.
func (*InitRequest) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{4}
}

type InitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InitResponse) Reset() {
	*x = InitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitResponse) ProtoMessage() {}

func (x *InitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitResponse.ProtoReflect.Descriptor instead.
func (*InitResponse) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{5}
}

// ---------- Node Related API ----------
// node inspect: get node metadata
type NodeInspectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *NodeInspectRequest) Reset() {
	*x = NodeInspectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInspectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInspectRequest) ProtoMessage() {}

func (x *NodeInspectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInspectRequest.ProtoReflect.Descriptor instead.
func (*NodeInspectRequest) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{6}
}

func (x *NodeInspectRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type NodeInspectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *NodeMetadata `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *NodeInspectResponse) Reset() {
	*x = NodeInspectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInspectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInspectResponse) ProtoMessage() {}

func (x *NodeInspectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInspectResponse.ProtoReflect.Descriptor instead.
func (*NodeInspectResponse) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{7}
}

func (x *NodeInspectResponse) GetInfo() *NodeMetadata {
	if x != nil {
		return x.Info
	}
	return nil
}

// node list/list: get nodes info list
type NodeListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NodeListRequest) Reset() {
	*x = NodeListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeListRequest) ProtoMessage() {}

func (x *NodeListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeListRequest.ProtoReflect.Descriptor instead.
func (*NodeListRequest) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{8}
}

type NodeListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoList []*NodeMetadata `protobuf:"bytes,1,rep,name=InfoList,proto3" json:"InfoList,omitempty"`
}

func (x *NodeListResponse) Reset() {
	*x = NodeListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeListResponse) ProtoMessage() {}

func (x *NodeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeListResponse.ProtoReflect.Descriptor instead.
func (*NodeListResponse) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{9}
}

func (x *NodeListResponse) GetInfoList() []*NodeMetadata {
	if x != nil {
		return x.InfoList
	}
	return nil
}

// ---------- Case Related API ----------
// case inspect: get testcase metadata
type CaseInspectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *CaseInspectRequest) Reset() {
	*x = CaseInspectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaseInspectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaseInspectRequest) ProtoMessage() {}

func (x *CaseInspectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaseInspectRequest.ProtoReflect.Descriptor instead.
func (*CaseInspectRequest) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{10}
}

func (x *CaseInspectRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type CaseInspectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CaseMetadata `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CaseInspectResponse) Reset() {
	*x = CaseInspectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaseInspectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaseInspectResponse) ProtoMessage() {}

func (x *CaseInspectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaseInspectResponse.ProtoReflect.Descriptor instead.
func (*CaseInspectResponse) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{11}
}

func (x *CaseInspectResponse) GetInfo() *CaseMetadata {
	if x != nil {
		return x.Info
	}
	return nil
}

// case list: get testcase list
type CaseListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CaseListRequest) Reset() {
	*x = CaseListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaseListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaseListRequest) ProtoMessage() {}

func (x *CaseListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaseListRequest.ProtoReflect.Descriptor instead.
func (*CaseListRequest) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{12}
}

type CaseListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoList []*CaseMetadata `protobuf:"bytes,1,rep,name=InfoList,proto3" json:"InfoList,omitempty"`
}

func (x *CaseListResponse) Reset() {
	*x = CaseListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaseListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaseListResponse) ProtoMessage() {}

func (x *CaseListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaseListResponse.ProtoReflect.Descriptor instead.
func (*CaseListResponse) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{13}
}

func (x *CaseListResponse) GetInfoList() []*CaseMetadata {
	if x != nil {
		return x.InfoList
	}
	return nil
}

// case add/add: add testcase to lkp-master
type CaseAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Tag  string `protobuf:"bytes,2,opt,name=Tag,proto3" json:"Tag,omitempty"`
	File []byte `protobuf:"bytes,3,opt,name=File,proto3" json:"File,omitempty"`
}

func (x *CaseAddRequest) Reset() {
	*x = CaseAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaseAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaseAddRequest) ProtoMessage() {}

func (x *CaseAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaseAddRequest.ProtoReflect.Descriptor instead.
func (*CaseAddRequest) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{14}
}

func (x *CaseAddRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CaseAddRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *CaseAddRequest) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

type CaseAddResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CaseMetadata `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CaseAddResponse) Reset() {
	*x = CaseAddResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaseAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaseAddResponse) ProtoMessage() {}

func (x *CaseAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaseAddResponse.ProtoReflect.Descriptor instead.
func (*CaseAddResponse) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{15}
}

func (x *CaseAddResponse) GetInfo() *CaseMetadata {
	if x != nil {
		return x.Info
	}
	return nil
}

// case update/update: update testcase to lkp-master
type CaseUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Tag  string `protobuf:"bytes,2,opt,name=Tag,proto3" json:"Tag,omitempty"`
	File []byte `protobuf:"bytes,3,opt,name=File,proto3" json:"File,omitempty"`
}

func (x *CaseUpdateRequest) Reset() {
	*x = CaseUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaseUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaseUpdateRequest) ProtoMessage() {}

func (x *CaseUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaseUpdateRequest.ProtoReflect.Descriptor instead.
func (*CaseUpdateRequest) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{16}
}

func (x *CaseUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CaseUpdateRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *CaseUpdateRequest) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

type CaseUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *CaseMetadata `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CaseUpdateResponse) Reset() {
	*x = CaseUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaseUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaseUpdateResponse) ProtoMessage() {}

func (x *CaseUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaseUpdateResponse.ProtoReflect.Descriptor instead.
func (*CaseUpdateResponse) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{17}
}

func (x *CaseUpdateResponse) GetInfo() *CaseMetadata {
	if x != nil {
		return x.Info
	}
	return nil
}

// case push/push: push testcase to lkp-node
type CasePushRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaseID  string   `protobuf:"bytes,1,opt,name=CaseID,proto3" json:"CaseID,omitempty"`
	NodeIDs []string `protobuf:"bytes,2,rep,name=NodeIDs,proto3" json:"NodeIDs,omitempty"`
}

func (x *CasePushRequest) Reset() {
	*x = CasePushRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CasePushRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CasePushRequest) ProtoMessage() {}

func (x *CasePushRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CasePushRequest.ProtoReflect.Descriptor instead.
func (*CasePushRequest) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{18}
}

func (x *CasePushRequest) GetCaseID() string {
	if x != nil {
		return x.CaseID
	}
	return ""
}

func (x *CasePushRequest) GetNodeIDs() []string {
	if x != nil {
		return x.NodeIDs
	}
	return nil
}

type CasePushResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rslts []string `protobuf:"bytes,1,rep,name=Rslts,proto3" json:"Rslts,omitempty"`
}

func (x *CasePushResponse) Reset() {
	*x = CasePushResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CasePushResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CasePushResponse) ProtoMessage() {}

func (x *CasePushResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CasePushResponse.ProtoReflect.Descriptor instead.
func (*CasePushResponse) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{19}
}

func (x *CasePushResponse) GetRslts() []string {
	if x != nil {
		return x.Rslts
	}
	return nil
}

type CasePushToAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaseID string `protobuf:"bytes,1,opt,name=CaseID,proto3" json:"CaseID,omitempty"`
}

func (x *CasePushToAllRequest) Reset() {
	*x = CasePushToAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CasePushToAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CasePushToAllRequest) ProtoMessage() {}

func (x *CasePushToAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CasePushToAllRequest.ProtoReflect.Descriptor instead.
func (*CasePushToAllRequest) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{20}
}

func (x *CasePushToAllRequest) GetCaseID() string {
	if x != nil {
		return x.CaseID
	}
	return ""
}

type CasePushToAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rslts []string `protobuf:"bytes,1,rep,name=Rslts,proto3" json:"Rslts,omitempty"`
}

func (x *CasePushToAllResponse) Reset() {
	*x = CasePushToAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CasePushToAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CasePushToAllResponse) ProtoMessage() {}

func (x *CasePushToAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CasePushToAllResponse.ProtoReflect.Descriptor instead.
func (*CasePushToAllResponse) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{21}
}

func (x *CasePushToAllResponse) GetRslts() []string {
	if x != nil {
		return x.Rslts
	}
	return nil
}

// ---------- Job Related API ----------
// job inspect: get job metadata
type JobInspectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *JobInspectRequest) Reset() {
	*x = JobInspectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobInspectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobInspectRequest) ProtoMessage() {}

func (x *JobInspectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobInspectRequest.ProtoReflect.Descriptor instead.
func (*JobInspectRequest) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{22}
}

func (x *JobInspectRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type JobInspectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *JobMetadata `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *JobInspectResponse) Reset() {
	*x = JobInspectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobInspectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobInspectResponse) ProtoMessage() {}

func (x *JobInspectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobInspectResponse.ProtoReflect.Descriptor instead.
func (*JobInspectResponse) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{23}
}

func (x *JobInspectResponse) GetInfo() *JobMetadata {
	if x != nil {
		return x.Info
	}
	return nil
}

// job list: get job list
type JobListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobListRequest) Reset() {
	*x = JobListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobListRequest) ProtoMessage() {}

func (x *JobListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobListRequest.ProtoReflect.Descriptor instead.
func (*JobListRequest) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{24}
}

type JobListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoList []*JobMetadata `protobuf:"bytes,1,rep,name=InfoList,proto3" json:"InfoList,omitempty"`
}

func (x *JobListResponse) Reset() {
	*x = JobListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobListResponse) ProtoMessage() {}

func (x *JobListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobListResponse.ProtoReflect.Descriptor instead.
func (*JobListResponse) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{25}
}

func (x *JobListResponse) GetInfoList() []*JobMetadata {
	if x != nil {
		return x.InfoList
	}
	return nil
}

// job run: run a job
type JobRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaseID       string   `protobuf:"bytes,1,opt,name=CaseID,proto3" json:"CaseID,omitempty"`
	Name         string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	ContainerCnt int64    `protobuf:"varint,3,opt,name=ContainerCnt,proto3" json:"ContainerCnt,omitempty"`
	NodeIDs      []string `protobuf:"bytes,4,rep,name=NodeIDs,proto3" json:"NodeIDs,omitempty"`
}

func (x *JobRunRequest) Reset() {
	*x = JobRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobRunRequest) ProtoMessage() {}

func (x *JobRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobRunRequest.ProtoReflect.Descriptor instead.
func (*JobRunRequest) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{26}
}

func (x *JobRunRequest) GetCaseID() string {
	if x != nil {
		return x.CaseID
	}
	return ""
}

func (x *JobRunRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JobRunRequest) GetContainerCnt() int64 {
	if x != nil {
		return x.ContainerCnt
	}
	return 0
}

func (x *JobRunRequest) GetNodeIDs() []string {
	if x != nil {
		return x.NodeIDs
	}
	return nil
}

type JobRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rslts []string `protobuf:"bytes,1,rep,name=Rslts,proto3" json:"Rslts,omitempty"`
}

func (x *JobRunResponse) Reset() {
	*x = JobRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobRunResponse) ProtoMessage() {}

func (x *JobRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobRunResponse.ProtoReflect.Descriptor instead.
func (*JobRunResponse) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{27}
}

func (x *JobRunResponse) GetRslts() []string {
	if x != nil {
		return x.Rslts
	}
	return nil
}

type JobRunToAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaseID       string `protobuf:"bytes,1,opt,name=CaseID,proto3" json:"CaseID,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	ContainerCnt int64  `protobuf:"varint,3,opt,name=ContainerCnt,proto3" json:"ContainerCnt,omitempty"`
}

func (x *JobRunToAllRequest) Reset() {
	*x = JobRunToAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobRunToAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobRunToAllRequest) ProtoMessage() {}

func (x *JobRunToAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobRunToAllRequest.ProtoReflect.Descriptor instead.
func (*JobRunToAllRequest) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{28}
}

func (x *JobRunToAllRequest) GetCaseID() string {
	if x != nil {
		return x.CaseID
	}
	return ""
}

func (x *JobRunToAllRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JobRunToAllRequest) GetContainerCnt() int64 {
	if x != nil {
		return x.ContainerCnt
	}
	return 0
}

type JobRunToAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rslts []string `protobuf:"bytes,1,rep,name=Rslts,proto3" json:"Rslts,omitempty"`
}

func (x *JobRunToAllResponse) Reset() {
	*x = JobRunToAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobRunToAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobRunToAllResponse) ProtoMessage() {}

func (x *JobRunToAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobRunToAllResponse.ProtoReflect.Descriptor instead.
func (*JobRunToAllResponse) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{29}
}

func (x *JobRunToAllResponse) GetRslts() []string {
	if x != nil {
		return x.Rslts
	}
	return nil
}

// ---------- Task Related API ----------
// task inspect: get task metadata
type TaskInspectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *TaskInspectRequest) Reset() {
	*x = TaskInspectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskInspectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskInspectRequest) ProtoMessage() {}

func (x *TaskInspectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskInspectRequest.ProtoReflect.Descriptor instead.
func (*TaskInspectRequest) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{30}
}

func (x *TaskInspectRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type TaskInspectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *TaskMetadata `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *TaskInspectResponse) Reset() {
	*x = TaskInspectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskInspectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskInspectResponse) ProtoMessage() {}

func (x *TaskInspectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskInspectResponse.ProtoReflect.Descriptor instead.
func (*TaskInspectResponse) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{31}
}

func (x *TaskInspectResponse) GetInfo() *TaskMetadata {
	if x != nil {
		return x.Info
	}
	return nil
}

// task list: get task list
type TaskListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobID string `protobuf:"bytes,1,opt,name=JobID,proto3" json:"JobID,omitempty"`
}

func (x *TaskListRequest) Reset() {
	*x = TaskListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskListRequest) ProtoMessage() {}

func (x *TaskListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskListRequest.ProtoReflect.Descriptor instead.
func (*TaskListRequest) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{32}
}

func (x *TaskListRequest) GetJobID() string {
	if x != nil {
		return x.JobID
	}
	return ""
}

type TaskListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoList []*TaskMetadata `protobuf:"bytes,1,rep,name=InfoList,proto3" json:"InfoList,omitempty"`
}

func (x *TaskListResponse) Reset() {
	*x = TaskListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskListResponse) ProtoMessage() {}

func (x *TaskListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskListResponse.ProtoReflect.Descriptor instead.
func (*TaskListResponse) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{33}
}

func (x *TaskListResponse) GetInfoList() []*TaskMetadata {
	if x != nil {
		return x.InfoList
	}
	return nil
}

//------------T.B.D------------
type TaskResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *TaskResultRequest) Reset() {
	*x = TaskResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResultRequest) ProtoMessage() {}

func (x *TaskResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResultRequest.ProtoReflect.Descriptor instead.
func (*TaskResultRequest) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{34}
}

func (x *TaskResultRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type TaskResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// bytes  File = 1;
	File string `protobuf:"bytes,1,opt,name=File,proto3" json:"File,omitempty"`
}

func (x *TaskResultResponse) Reset() {
	*x = TaskResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cli_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResultResponse) ProtoMessage() {}

func (x *TaskResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cli_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResultResponse.ProtoReflect.Descriptor instead.
func (*TaskResultResponse) Descriptor() ([]byte, []int) {
	return file_cli_proto_rawDescGZIP(), []int{35}
}

func (x *TaskResultResponse) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

var File_cli_proto protoreflect.FileDescriptor

var file_cli_proto_rawDesc = []byte{
	0x0a, 0x09, 0x63, 0x6c, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x63, 0x6c, 0x69,
	0x22, 0xc6, 0x01, 0x0a, 0x0c, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x50, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x50, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x56,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4b, 0x65, 0x72, 0x6e, 0x65, 0x6c,
	0x56, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x74, 0x56, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x44, 0x69, 0x73, 0x74, 0x56, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x41, 0x72, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x72, 0x63,
	0x68, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x6d, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x46, 0x72, 0x65, 0x65, 0x4d, 0x65, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x44,
	0x69, 0x73, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x44, 0x69, 0x73, 0x6b, 0x55, 0x73, 0x61, 0x67, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x0c, 0x43, 0x61,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x54, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x54, 0x61, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x4d, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x4d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xbb, 0x02, 0x0a, 0x0b, 0x4a,
	0x6f, 0x62, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b,
	0x0a, 0x04, 0x53, 0x74, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63,
	0x6c, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x43, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x43, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x46, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x46, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x43, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x43, 0x61,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x43, 0x61, 0x73, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x05, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x05, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x39, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x41, 0x4e, 0x44,
	0x42, 0x59, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x10, 0x02, 0x12, 0x09, 0x0a,
	0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x22, 0xc9, 0x03, 0x0a, 0x0c, 0x54, 0x61, 0x73,
	0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x04, 0x53, 0x74, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x04, 0x53, 0x74, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x46, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x46, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x73,
	0x6c, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65,
	0x73, 0x6c, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x08, 0x43, 0x61, 0x73,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6c,
	0x69, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x43, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6c, 0x69,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x39, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x42, 0x59, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46,
	0x49, 0x4e, 0x49, 0x53, 0x48, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x03, 0x22, 0x30, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x52, 0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x48,
	0x4f, 0x53, 0x54, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e,
	0x45, 0x52, 0x10, 0x02, 0x22, 0x0d, 0x0a, 0x0b, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x24, 0x0a, 0x12, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x3c, 0x0a, 0x13, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x11, 0x0a, 0x0f, 0x4e, 0x6f, 0x64, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x41, 0x0a, 0x10, 0x4e, 0x6f,
	0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d,
	0x0a, 0x08, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x08, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x24, 0x0a,
	0x12, 0x43, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x44, 0x22, 0x3c, 0x0a, 0x13, 0x43, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x43,
	0x61, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x11, 0x0a, 0x0f, 0x43, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x41, 0x0a, 0x10, 0x43, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x49, 0x6e, 0x66, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6c, 0x69,
	0x2e, 0x43, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x49,
	0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4a, 0x0a, 0x0e, 0x43, 0x61, 0x73, 0x65, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x54, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x54, 0x61, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x46,
	0x69, 0x6c, 0x65, 0x22, 0x38, 0x0a, 0x0f, 0x43, 0x61, 0x73, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4d, 0x0a,
	0x11, 0x43, 0x61, 0x73, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x3b, 0x0a, 0x12,
	0x43, 0x61, 0x73, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x43, 0x0a, 0x0f, 0x43, 0x61, 0x73,
	0x65, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x43, 0x61, 0x73, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43, 0x61,
	0x73, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x73, 0x22, 0x28,
	0x0a, 0x10, 0x43, 0x61, 0x73, 0x65, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x73, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x52, 0x73, 0x6c, 0x74, 0x73, 0x22, 0x2e, 0x0a, 0x14, 0x43, 0x61, 0x73, 0x65,
	0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x73, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x43, 0x61, 0x73, 0x65, 0x49, 0x44, 0x22, 0x2d, 0x0a, 0x15, 0x43, 0x61, 0x73, 0x65,
	0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x73, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x52, 0x73, 0x6c, 0x74, 0x73, 0x22, 0x23, 0x0a, 0x11, 0x4a, 0x6f, 0x62, 0x49, 0x6e,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x3a, 0x0a, 0x12,
	0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x10, 0x0a, 0x0e, 0x4a, 0x6f, 0x62, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3f, 0x0a, 0x0f, 0x4a, 0x6f,
	0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a,
	0x08, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x79, 0x0a, 0x0d, 0x4a,
	0x6f, 0x62, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x43, 0x61, 0x73, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43, 0x61,
	0x73, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x44, 0x73, 0x22, 0x26, 0x0a, 0x0e, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x73, 0x6c, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x52, 0x73, 0x6c, 0x74, 0x73, 0x22, 0x64,
	0x0a, 0x12, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x61, 0x73, 0x65, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43, 0x61, 0x73, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x43, 0x6e, 0x74, 0x22, 0x2b, 0x0a, 0x13, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x54, 0x6f,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x52,
	0x73, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x52, 0x73, 0x6c, 0x74,
	0x73, 0x22, 0x24, 0x0a, 0x12, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x3c, 0x0a, 0x13, 0x54, 0x61, 0x73, 0x6b, 0x49,
	0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6c, 0x69, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x27, 0x0a, 0x0f, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4a, 0x6f, 0x62, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x22, 0x41,
	0x0a, 0x10, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x23, 0x0a, 0x11, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x28, 0x0a, 0x12, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x46, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x69, 0x6c, 0x65,
	0x32, 0xc2, 0x07, 0x0a, 0x03, 0x43, 0x6c, 0x69, 0x12, 0x2b, 0x0a, 0x04, 0x49, 0x6e, 0x69, 0x74,
	0x12, 0x10, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x11, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49,
	0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x63, 0x6c, 0x69, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x63, 0x6c, 0x69, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x0b, 0x43, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x12,
	0x17, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x43,
	0x61, 0x73, 0x65, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x43, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14,
	0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x43,
	0x61, 0x73, 0x65, 0x41, 0x64, 0x64, 0x12, 0x13, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x73,
	0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x63, 0x6c,
	0x69, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x43, 0x61, 0x73, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x43, 0x61,
	0x73, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x08, 0x43, 0x61, 0x73, 0x65, 0x50, 0x75, 0x73, 0x68, 0x12, 0x14, 0x2e, 0x63,
	0x6c, 0x69, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x50, 0x75, 0x73,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0d, 0x43, 0x61, 0x73,
	0x65, 0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x12, 0x19, 0x2e, 0x63, 0x6c, 0x69,
	0x2e, 0x43, 0x61, 0x73, 0x65, 0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x43, 0x61, 0x73, 0x65,
	0x50, 0x75, 0x73, 0x68, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x12,
	0x16, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x4a, 0x6f,
	0x62, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x34, 0x0a, 0x07, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x63, 0x6c,
	0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e,
	0x12, 0x12, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x75,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x4a, 0x6f, 0x62,
	0x52, 0x75, 0x6e, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x4a,
	0x6f, 0x62, 0x52, 0x75, 0x6e, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x54, 0x6f,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x54,
	0x61, 0x73, 0x6b, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x69,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a,
	0x08, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x63, 0x6c, 0x69, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x2e, 0x63, 0x6c, 0x69, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x63,
	0x6c, 0x69, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x63, 0x6c, 0x69, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cli_proto_rawDescOnce sync.Once
	file_cli_proto_rawDescData = file_cli_proto_rawDesc
)

func file_cli_proto_rawDescGZIP() []byte {
	file_cli_proto_rawDescOnce.Do(func() {
		file_cli_proto_rawDescData = protoimpl.X.CompressGZIP(file_cli_proto_rawDescData)
	})
	return file_cli_proto_rawDescData
}

var file_cli_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_cli_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_cli_proto_goTypes = []interface{}{
	(JobMetadata_Status)(0),       // 0: cli.JobMetadata.Status
	(TaskMetadata_Status)(0),      // 1: cli.TaskMetadata.Status
	(TaskMetadata_RoleType)(0),    // 2: cli.TaskMetadata.RoleType
	(*NodeMetadata)(nil),          // 3: cli.NodeMetadata
	(*CaseMetadata)(nil),          // 4: cli.CaseMetadata
	(*JobMetadata)(nil),           // 5: cli.JobMetadata
	(*TaskMetadata)(nil),          // 6: cli.TaskMetadata
	(*InitRequest)(nil),           // 7: cli.InitRequest
	(*InitResponse)(nil),          // 8: cli.InitResponse
	(*NodeInspectRequest)(nil),    // 9: cli.NodeInspectRequest
	(*NodeInspectResponse)(nil),   // 10: cli.NodeInspectResponse
	(*NodeListRequest)(nil),       // 11: cli.NodeListRequest
	(*NodeListResponse)(nil),      // 12: cli.NodeListResponse
	(*CaseInspectRequest)(nil),    // 13: cli.CaseInspectRequest
	(*CaseInspectResponse)(nil),   // 14: cli.CaseInspectResponse
	(*CaseListRequest)(nil),       // 15: cli.CaseListRequest
	(*CaseListResponse)(nil),      // 16: cli.CaseListResponse
	(*CaseAddRequest)(nil),        // 17: cli.CaseAddRequest
	(*CaseAddResponse)(nil),       // 18: cli.CaseAddResponse
	(*CaseUpdateRequest)(nil),     // 19: cli.CaseUpdateRequest
	(*CaseUpdateResponse)(nil),    // 20: cli.CaseUpdateResponse
	(*CasePushRequest)(nil),       // 21: cli.CasePushRequest
	(*CasePushResponse)(nil),      // 22: cli.CasePushResponse
	(*CasePushToAllRequest)(nil),  // 23: cli.CasePushToAllRequest
	(*CasePushToAllResponse)(nil), // 24: cli.CasePushToAllResponse
	(*JobInspectRequest)(nil),     // 25: cli.JobInspectRequest
	(*JobInspectResponse)(nil),    // 26: cli.JobInspectResponse
	(*JobListRequest)(nil),        // 27: cli.JobListRequest
	(*JobListResponse)(nil),       // 28: cli.JobListResponse
	(*JobRunRequest)(nil),         // 29: cli.JobRunRequest
	(*JobRunResponse)(nil),        // 30: cli.JobRunResponse
	(*JobRunToAllRequest)(nil),    // 31: cli.JobRunToAllRequest
	(*JobRunToAllResponse)(nil),   // 32: cli.JobRunToAllResponse
	(*TaskInspectRequest)(nil),    // 33: cli.TaskInspectRequest
	(*TaskInspectResponse)(nil),   // 34: cli.TaskInspectResponse
	(*TaskListRequest)(nil),       // 35: cli.TaskListRequest
	(*TaskListResponse)(nil),      // 36: cli.TaskListResponse
	(*TaskResultRequest)(nil),     // 37: cli.TaskResultRequest
	(*TaskResultResponse)(nil),    // 38: cli.TaskResultResponse
}
var file_cli_proto_depIdxs = []int32{
	0,  // 0: cli.JobMetadata.Stat:type_name -> cli.JobMetadata.Status
	4,  // 1: cli.JobMetadata.CaseInfo:type_name -> cli.CaseMetadata
	6,  // 2: cli.JobMetadata.Tasks:type_name -> cli.TaskMetadata
	1,  // 3: cli.TaskMetadata.Stat:type_name -> cli.TaskMetadata.Status
	2,  // 4: cli.TaskMetadata.Role:type_name -> cli.TaskMetadata.RoleType
	4,  // 5: cli.TaskMetadata.CaseInfo:type_name -> cli.CaseMetadata
	3,  // 6: cli.TaskMetadata.NodeInfo:type_name -> cli.NodeMetadata
	3,  // 7: cli.NodeInspectResponse.Info:type_name -> cli.NodeMetadata
	3,  // 8: cli.NodeListResponse.InfoList:type_name -> cli.NodeMetadata
	4,  // 9: cli.CaseInspectResponse.Info:type_name -> cli.CaseMetadata
	4,  // 10: cli.CaseListResponse.InfoList:type_name -> cli.CaseMetadata
	4,  // 11: cli.CaseAddResponse.Info:type_name -> cli.CaseMetadata
	4,  // 12: cli.CaseUpdateResponse.Info:type_name -> cli.CaseMetadata
	5,  // 13: cli.JobInspectResponse.Info:type_name -> cli.JobMetadata
	5,  // 14: cli.JobListResponse.InfoList:type_name -> cli.JobMetadata
	6,  // 15: cli.TaskInspectResponse.Info:type_name -> cli.TaskMetadata
	6,  // 16: cli.TaskListResponse.InfoList:type_name -> cli.TaskMetadata
	7,  // 17: cli.Cli.Init:input_type -> cli.InitRequest
	9,  // 18: cli.Cli.NodeInspect:input_type -> cli.NodeInspectRequest
	11, // 19: cli.Cli.NodeList:input_type -> cli.NodeListRequest
	13, // 20: cli.Cli.CaseInspect:input_type -> cli.CaseInspectRequest
	15, // 21: cli.Cli.CaseList:input_type -> cli.CaseListRequest
	17, // 22: cli.Cli.CaseAdd:input_type -> cli.CaseAddRequest
	19, // 23: cli.Cli.CaseUpdate:input_type -> cli.CaseUpdateRequest
	21, // 24: cli.Cli.CasePush:input_type -> cli.CasePushRequest
	23, // 25: cli.Cli.CasePushToAll:input_type -> cli.CasePushToAllRequest
	25, // 26: cli.Cli.JobInspect:input_type -> cli.JobInspectRequest
	27, // 27: cli.Cli.JobList:input_type -> cli.JobListRequest
	29, // 28: cli.Cli.JobRun:input_type -> cli.JobRunRequest
	31, // 29: cli.Cli.JobRunToAll:input_type -> cli.JobRunToAllRequest
	33, // 30: cli.Cli.TaskInspect:input_type -> cli.TaskInspectRequest
	35, // 31: cli.Cli.TaskList:input_type -> cli.TaskListRequest
	37, // 32: cli.Cli.TaskResult:input_type -> cli.TaskResultRequest
	8,  // 33: cli.Cli.Init:output_type -> cli.InitResponse
	10, // 34: cli.Cli.NodeInspect:output_type -> cli.NodeInspectResponse
	12, // 35: cli.Cli.NodeList:output_type -> cli.NodeListResponse
	14, // 36: cli.Cli.CaseInspect:output_type -> cli.CaseInspectResponse
	16, // 37: cli.Cli.CaseList:output_type -> cli.CaseListResponse
	18, // 38: cli.Cli.CaseAdd:output_type -> cli.CaseAddResponse
	20, // 39: cli.Cli.CaseUpdate:output_type -> cli.CaseUpdateResponse
	22, // 40: cli.Cli.CasePush:output_type -> cli.CasePushResponse
	24, // 41: cli.Cli.CasePushToAll:output_type -> cli.CasePushToAllResponse
	26, // 42: cli.Cli.JobInspect:output_type -> cli.JobInspectResponse
	28, // 43: cli.Cli.JobList:output_type -> cli.JobListResponse
	30, // 44: cli.Cli.JobRun:output_type -> cli.JobRunResponse
	32, // 45: cli.Cli.JobRunToAll:output_type -> cli.JobRunToAllResponse
	34, // 46: cli.Cli.TaskInspect:output_type -> cli.TaskInspectResponse
	36, // 47: cli.Cli.TaskList:output_type -> cli.TaskListResponse
	38, // 48: cli.Cli.TaskResult:output_type -> cli.TaskResultResponse
	33, // [33:49] is the sub-list for method output_type
	17, // [17:33] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_cli_proto_init() }
func file_cli_proto_init() {
	if File_cli_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cli_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaseMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInspectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInspectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaseInspectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaseInspectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaseListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaseListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaseAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaseAddResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaseUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CaseUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CasePushRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CasePushResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CasePushToAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CasePushToAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobInspectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobInspectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobRunToAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobRunToAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskInspectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskInspectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cli_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cli_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cli_proto_goTypes,
		DependencyIndexes: file_cli_proto_depIdxs,
		EnumInfos:         file_cli_proto_enumTypes,
		MessageInfos:      file_cli_proto_msgTypes,
	}.Build()
	File_cli_proto = out.File
	file_cli_proto_rawDesc = nil
	file_cli_proto_goTypes = nil
	file_cli_proto_depIdxs = nil
}
